# ft: direnv

[ "${DIRENV_DEBUG-}" = "" ] || set -x

layout_poetry() {
    PYPROJECT_TOML="${PYPROJECT_TOML:-pyproject.toml}"

    if [[ ! -f $PYPROJECT_TOML ]]; then
        log_status "No pyproject.toml found. Executing \`poetry init\` to create a \`$PYPROJECT_TOML\` first."
        poetry init
    fi

    if [[ -d ".venv" ]]; then
        VIRTUAL_ENV="$PWD/.venv"
    else
        VIRTUAL_ENV=$(
            poetry env info --path 2> /dev/null
            true
        )
    fi

    if [[ -z $VIRTUAL_ENV || ! -d $VIRTUAL_ENV ]]; then
        log_status 'No virtual environment exists. Executing "poetry install" to create one.'
        poetry install

        VIRTUAL_ENV=$(poetry env info --path)
    fi

    PATH_add "$VIRTUAL_ENV/bin"

    export POETRY_ACTIVE=1
    export VIRTUAL_ENV
}

layout_pdm() {
    PYPROJECT_TOML="${PYPROJECT_TOML:-pyproject.toml}"

    if [ ! -f "$PYPROJECT_TOML" ]; then
        log_status "No pyproject.toml found. Executing \`pmd init\` to create a \`$PYPROJECT_TOML\` first."
        pdm init --non-interactive --python "$(python3 --version 2> /dev/null | cut -d' ' -f2 | cut -d. -f1-2)"
    fi

    VIRTUAL_ENV=$(pdm venv list | grep "^\*" | awk -F" " '{print $3}')

    if [ "$VIRTUAL_ENV" = "" ] || [ ! -d "$VIRTUAL_ENV" ]; then
        log_status 'No virtual environment exists. Executing "pdm info" to create one.'
        pdm info

        VIRTUAL_ENV=$(pdm venv list | grep "^\*" | awk -F" " '{print $3}')
    fi

    PATH_add "$VIRTUAL_ENV/bin"

    export PDM_ACTIVE=1
    export VIRTUAL_ENV
}

layout_uv() {
    PYPROJECT_TOML="${PYPROJECT_TOML:-pyproject.toml}"
    UV_LOCK="${UV_LOCK:-uv.lock}"

    if [ ! -f "$PYPROJECT_TOML" ]; then
        log_status "No pyproject.toml found. Executing \`uv init\` to create a \`$PYPROJECT_TOML\` first."
        uv init
    fi

    if [ -d ".venv" ]; then
        export VIRTUAL_ENV="$PWD/.venv"

        PATH_add "$VIRTUAL_ENV/bin"
    else
        unset VIRTUAL_ENV
    fi

    if [ -f "$UV_LOCK" ]; then
        watch_file uv.lock
    fi
}

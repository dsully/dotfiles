{{- if .flags.work -}}
# vim:ft=fish

function write_vscode_settings -a root module
    set settings $root/.vscode/settings.json

    mkdir -p (dirname $settings)

    echo "{\"python.pythonPath\": \"\${workspaceRoot}/build/$module/venv/bin/python\"}" >$settings
end

function find_product_root
    set spec "product-spec.json"

    if test -f $PWD/$spec
        echo $PWD
    else if test -f $PWD/../$spec
        echo $PWD/..
    else
        set current_path $PWD
        set limit_path $HOME/dev

        while true
            for child in (ls $current_path)
                if test $child = $spec -a -f $child
                    echo $current_path
                    return
                end
            end

            if test $current_path = $limit_path
                echo "Hit the limit path."
                return 1
            end

            set current_path (dirname $current_path)
        end
    end
end

function is_pygradle2 -a root
    _is_type $root/product-spec.json ligradle-python
end

function _is_type -a path expected
    if test -f $path
        grep -q $expected $path
        return $status
    end

    return 1
end

function b -d "Build Gradle Projects."
    set root (find_product_root)

    for build in (find $root -name build.gradle)
        set activate (dirname $build)/activate

        if test -f $activate
            rm $activate
        end
    end

    set direnv ""

    if is_pygradle2 $root
        set direnv pygradle2
    end

    for build in (find $root -name build.gradle)
        set module (dirname $build)

        if test -n "$direnv"
            set envrc $module/.envrc

            echo "layout $direnv" >$envrc

            direnv allow $module
        end
    end

    command mint build $argv
end
{{- end -}}

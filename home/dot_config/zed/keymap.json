// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight",
      "cmd-l": "assistant::ToggleFocus",
      "cmd-,": "zed::OpenSettings"
    }
  },
  {
    "context": "(vim_mode == normal && !menu) || EmptyPane || SharedScreen",
    "bindings": {
      "shift-h": "pane::ActivatePrevItem",
      "shift-l": "pane::ActivateNextItem"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !menu",
    "bindings": {
      "g D": "editor::GoToDeclaration",
      "g d": "editor::GoToDefinition",
      "g h": "editor::MoveToBeginningOfLine",
      "g I": "editor::GoToImplementation",
      "g l": "editor::MoveToEndOfLine",
      "g r": "editor::FindAllReferences",
      "g y": "editor::GoToTypeDefinition",
      "g r a": "editor::ToggleCodeActions",
      "cmd-k": "editor::Hover",
      "space f": "editor::Format",
      "space c r": "editor::Rename",
      ", b d": "workspace::CloseWindow"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !menu",
    "bindings": {
      "<": "editor::Outdent",
      ">": "editor::Indent",
      "g n": "vim::SelectNext",
      "space c a": "editor::ToggleCodeActions",
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "ctrl-k": "editor::ShowSignatureHelp"
    }
  },
  {
    "context": "ContextEditor > Editor && vim_mode == normal && !menu",
    "bindings": {
      "q": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "ProjectPanel && !editing",
    "bindings": {
      "q": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "ProjectSearchBar",
    "bindings": {
      "escape": "pane::CloseActiveItem"
    }
  }
]

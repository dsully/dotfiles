## ░█▀▀░▀█▀░█▀█░█▀▄░█▀▀░█░█░▀█▀░█▀█
## ░▀▀█░░█░░█▀█░█▀▄░▀▀█░█▀█░░█░░█▀▀
## ░▀▀▀░░▀░░▀░▀░▀░▀░▀▀▀░▀░▀░▀▀▀░▀░░
## CROSS-SHELL PROMPT

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

format = '''
${custom.username}${custom_sudo}($hostname)\[$directory\] (\($golang$lua$nodejs$python$rust$zig$git_branch$git_status\) $status)
$character'''

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
error_symbol = '\$'
success_symbol = '\$'

[custom.direnv]
format = "[$symbol]($style)"
style = "blue"
symbol = "  "
when = "env | grep -E '^DIRENV_FILE='"

# https://github.com/starship/starship/discussions/1252#discussioncomment-194627
# https://github.com/starship/starship/discussions/1252#discussioncomment-838901
[custom.giturl]
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
printf "$GIT_REMOTE_SYMBOL"
"""
format = "$output"
shell = [ "bash", "--noprofile", "--norc" ]
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'

[custom.python_env]
command = "basename $VIRTUAL_ENV"
format = "[\\($output\\)]($style) "
style = "bold green"
when = 'test -n "$VIRTUAL_ENV"'

[custom.sudo]
command = "echo -n ''"
description = "Valid sudo timestamp marker"
format = "[$symbol$output]($style) "
shell = [ "bash", "--noprofile", "--norc" ]
style = "bold red"
when = "sudo -vn &>/dev/null"

# https://github.com/starship/starship/issues/4003
# https://github.com/TsekNet/dotfiles/commit/23caa887ee7350fdb4cd91522b97555b5a962974
[custom.username]
command = "echo $USER"
format = "[$output](red bold)@"
ignore_timeout = true
style = "bold red"
when = "test $USER != 'dsully'"

[directory]
fish_style_pwd_dir_length = 1
format = '[$path]($style)'
style = "cyan"

[golang]
format = '[$symbol]($style) '
symbol = '󰟓'

[hostname]
format = '[$hostname](bold white):'
ssh_only = true

[lua]
format = '[$symbol]($style) '
symbol = "󰢱"

[nodejs]
format = '[$symbol($version)]($style) '
symbol = "󰎙"

[python]
format = '[$symbol]($style) '
symbol = '󰌠'

[rust]
format = '[$symbol]($style) '
symbol = '󱘗'

# [username]
# format = '[$user]($style)@'
# style_root = 'bold red'
# style_user = 'cyan'

[zig]
format = '[$symbol($version)]($style) '
symbol = ""                            # nf-seti-zig

[git_branch]
format = '[$branch]($style)'
style = "bold white"
symbol = ""

[git_status]
disabled = false
format = "[($staged$modified)]($style)"
modified = "*"
staged = "+"
style = "white"

[status]
disabled = false
map_symbol = true
not_executable_symbol = " " # nf-fa-times_circle
not_found_symbol = " "      # nf-fa-question_circle
sigint_symbol = " "         # nf-fa-stop_circle
signal_symbol = "󰉁 "         # nf-md-flash
success_symbol = ""
symbol = ""                 # nf-fa-exclamation
# recognize_signal_code = false
# pipestatus = true
format = '\[[$symbol$status]($style)\]'
pipestatus_format = ' \[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
pipestatus_separator = "|"

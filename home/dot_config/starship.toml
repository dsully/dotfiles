# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

format = '''
${custom.username}($hostname)\[$directory\] (\($golang$lua$python$rust$git_branch$git_status\))
$character'''

# Replace the '❯' symbol in the prompt with '➜'
[character] # The name of the module we are configuring is 'character'
error_symbol = '\$'
success_symbol = '\$'

[custom.direnv]
format = "[$symbol]($style)"
symbol = "  "
style = "blue"
when = "env | grep -E '^DIRENV_FILE='"

# https://github.com/starship/starship/discussions/1252#discussioncomment-194627
# https://github.com/starship/starship/discussions/1252#discussioncomment-838901
[custom.giturl]
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
printf "$GIT_REMOTE_SYMBOL"
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "$output"

[custom.python_env]
when = 'test -n "$VIRTUAL_ENV"'
format = "[\\($output\\)]($style) "
command = "basename $VIRTUAL_ENV"
style = "bold green"

[custom.sudo]
description = "Valid sudo timestamp marker"
command = "echo -n ''"
format = "[$symbol$output]($style) "
shell = [ "bash", "--noprofile", "--norc" ]
style = "bold red"
when = "sudo -vn &>/dev/null"

# https://github.com/starship/starship/issues/4003
# https://github.com/TsekNet/dotfiles/commit/23caa887ee7350fdb4cd91522b97555b5a962974
[custom.username]
when = "test $USER != 'dsully'"
format = "[$output](red bold)@"
command = "echo $USER"
style = "bold red"

[directory]
fish_style_pwd_dir_length = 1
format = '[$path]($style)'
style = "cyan"

[git_branch]
format = '[$branch]($style)'
style = "bold white"
symbol = ""

[git_status]
disabled = false
format = "[( $staged$modified)]($style)"
modified = "*"
staged = "+"
style = "white"

[golang]
format = '[$symbol]($style) '
symbol = '󰟓' # 

[hostname]
format = '[$hostname](bold white):'
ssh_only = true

[lua]
format = '[$symbol]($style) '
symbol = '󰢱'

[python]
format = '[$symbol]($style) '
symbol = '󰌠'

[rust]
format = '[$symbol]($style) '
symbol = '󱘗'

# [username]
# format = '[$user]($style)@'
# style_root = 'bold red'
# style_user = 'cyan'

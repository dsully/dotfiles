#!{{ lookPath "bash" }}

# vim:ft=bash.gotmpl
set -eufo pipefail

declare -r red="$(tput setaf 1)"
declare -r red_bg="$(tput setab 1)"
declare -r green="$(tput setaf 2)"
declare -r white="$(tput setaf 7)"
declare -r normal="$(tput sgr0)" # Reset / No Color
declare -r bold="$(tput bold)"

start() {
    printf "${green}▶ ${normal}${bold}$1${normal}\n"
}

command_exists() {
    type "${1}" > /dev/null 2>&1
}

has_brew() {
    if declare -p HOMEBREW_PREFIX &> /dev/null; then
        BREW="$HOMEBREW_PREFIX/bin/brew"
    else
        if [[ -x /opt/homebrew/bin/brew ]]; then
            BREW=/opt/homebrew/bin/brew
        elif [[ -x /usr/local/bin/brew ]]; then
            BREW=/usr/local/bin/brew
        elif [[ -x /home/linuxbrew/.linuxbrew/bin/brew ]]; then
            BREW=/home/linuxbrew/.linuxbrew/bin/brew
        else
            return 1
        fi

        eval "$("$BREW" shellenv)"
    fi

    export BREW=$BREW

    return 0
}

install_homebrew() {
    if ! command_exists brew; then
        start "Installing Homebrew.."

        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
}

install_nix() {
    if ! command_exists nix; then
        start "Installing Nix.."

        curl -sSf -L https://install.lix.systems/lix | sh -s -- install
    fi
}

install_package() {
    package="$1"

    if ! command_exists "$package"; then
        start "Installing $package from Homebrew."
        "$BREW" install -q "$package" > /dev/null 2>&1
    fi
}

install_homebrew
install_nix

if has_brew; then
    install_package age
    install_package fish

    # if [[ $CHEZMOI_OS == darwin ]]; then
    #     install_package pam-reattach
    #
    #     export CHEZMOI_HOME="{{ .chezmoi.sourceDir }}/dot_config"
    #
    #     # Sonoma+ allows a sudo_local file in /etc/pam.d/
    #     # sudo cp -f "${CHEZMOI_HOME}/system/etc/pam.d/sudo_local" /etc/pam.d/sudo_local
    #
    #     # install_package mas
    # fi
else
    printf "${red}✖ ${red_bg}${bold}${white} ERROR ${normal} Can't find Homebrew in the PATH.${normal}\n"
fi

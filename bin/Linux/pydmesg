#!/usr/bin/env python3

"""pydmesg: dmesg with human-readable timestamps"""

import re
import subprocess

from datetime import datetime, timedelta

_datetime_format = "%Y-%m-%d %H:%M:%S"
_dmesg_line_regex = re.compile(r"^\[\s*(?P<time>\d+\.\d+)\](?P<line>.*)$")


def main():
    now = datetime.now()
    uptime_diff = None

    try:
        with open("/proc/uptime") as f:
            uptime_diff = f.read().strip().split()[0]
    except IndexError:
        return

    else:
        try:
            uptime = now - timedelta(
                seconds=int(uptime_diff.split(".")[0]),
                microseconds=int(uptime_diff.split(".")[1]),
            )
        except IndexError:
            return

    lines = [
        line
        for line in subprocess.run(
            ["/bin/dmesg"], capture_output=True, text=True
        ).stdout.split("\n")
        if line
    ]

    for line in lines:
        if match := _dmesg_line_regex.match(line):
            try:
                seconds = int(match.groupdict().get("time", "").split(".")[0])
                nanoseconds = int(match.groupdict().get("time", "").split(".")[1])
                microseconds = int(round(nanoseconds * 0.001))
                line = match.groupdict().get("line", "")
                t = uptime + timedelta(seconds=seconds, microseconds=microseconds)

            except IndexError:
                pass
            else:
                print("[{}]{}".format(t.strftime(_datetime_format), line))


if __name__ == "__main__":
    main()
